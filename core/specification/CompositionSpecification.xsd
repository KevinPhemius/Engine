<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" targetNamespace="http://netide.eu/schemas/compositionspecification/v1" xmlns:tns="http://netide.eu/schemas/compositionspecification/v1" xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:element name="Branch">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="tns:ExecutionFlowNode">
          <xs:sequence>
            <xs:element name="BranchCondition" type="tns:Condition" form="qualified" minOccurs="0"/>
            <xs:element ref="tns:If"/>
            <xs:element ref="tns:Else"/>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="CompositionSpecification">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Modules" form="qualified">
          <xs:complexType>
            <xs:sequence>
              <xs:element ref="tns:Module" maxOccurs="unbounded"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Composition" form="qualified" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="tns:ModuleCall"/>
                <xs:element ref="tns:ParallelCall"/>
                <xs:element ref="tns:Branch"/>
              </xs:choice>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="Else">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="tns:ExecutionFlowNodeContainer">
          <xs:sequence/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="If">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="tns:ExecutionFlowNodeContainer">
          <xs:sequence/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="Module">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="CallCondition" type="tns:Condition" form="qualified" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="id" type="xs:ID" use="required"/>
      <xs:attribute name="loaderIdentification" type="xs:string" use="required"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="ModuleCall">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="tns:ExecutionFlowNode">
          <xs:sequence>
            <xs:element name="CallCondition" type="tns:Condition" form="qualified" minOccurs="0"/>
          </xs:sequence>
          <xs:attribute name="allowVetoResult" type="xs:boolean"/>
          <xs:attribute name="module" type="xs:IDREF" use="required"/>
          <xs:attribute name="priority" type="xs:int" use="optional"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="ParallelCall">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="tns:ExecutionFlowNode">
          <xs:sequence>
            <xs:element ref="tns:ModuleCall" maxOccurs="unbounded"/>
          </xs:sequence>
          <xs:attribute name="mergePolicy" type="tns:MergePolicy"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:complexType name="Condition">
    <xs:sequence/>
    <xs:attribute name="ethDst" type="xs:string"/>
    <xs:attribute name="ethSrc" type="xs:string"/>
    <xs:attribute name="ethType" type="xs:string"/>
    <xs:attribute name="events">
      <xs:simpleType>
        <xs:list itemType="tns:Events"/>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="inPort" type="xs:string"/>
    <xs:attribute name="ipv4Dst" type="xs:string"/>
    <xs:attribute name="ipv4Src" type="xs:string"/>
    <xs:attribute name="ipv6Dst" type="xs:string"/>
    <xs:attribute name="ipv6Src" type="xs:string"/>
    <xs:attribute name="ipProto" type="xs:string"/>
    <xs:attribute name="tcpDst" type="xs:string"/>
    <xs:attribute name="tcpSrc" type="xs:string"/>
    <xs:attribute name="udpDst" type="xs:string"/>
    <xs:attribute name="udpSrc" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="ExecutionFlowNode" abstract="true">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="ExecutionFlowNodeContainer" abstract="true">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="tns:ModuleCall"/>
        <xs:element ref="tns:ParallelCall"/>
        <xs:element ref="tns:Branch"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:simpleType name="Events">
    <xs:restriction base="xs:string">
      <xs:enumeration value="connectionDown"/>
      <xs:enumeration value="flowMod"/>
      <xs:enumeration value="portStatus"/>
      <xs:enumeration value="packetIn"/>
      <xs:enumeration value="errorIn"/>
      <xs:enumeration value="connectionUp"/>
      <xs:enumeration value="barrierIn"/>
      <xs:enumeration value="flowRemoved"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="MergePolicy">
    <xs:restriction base="xs:string">
      <xs:enumeration value="priority"/>
      <xs:enumeration value="ignore"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>

