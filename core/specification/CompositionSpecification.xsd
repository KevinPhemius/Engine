<?xml version="1.0"?>

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://netide.eu/schemas/compositionspecification/v1" xmlns="http://netide.eu/schemas/compositionspecification/v1">

  <xs:element name="CompositionSpecification">
    <xs:complexType>
      <xs:all>
        <xs:element ref="Modules"/>
        <xs:element ref="Composition"/>
      </xs:all>
    </xs:complexType>
  </xs:element>

  <!-- ### Modules section ### -->

  <xs:element name="Modules">
    <xs:complexType>
      <xs:sequence minOccurs="1" maxOccurs="unbounded">
        <xs:element ref="Module"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="Module">
    <xs:complexType>
      <xs:choice minOccurs="0">
        <xs:element ref="CallFilter"/>
      </xs:choice>
      <xs:attribute name="id" type="moduleID" use="required"/>
      <xs:attribute name="loaderIdentification" type="loaderIdentification" use="required"/>
    </xs:complexType>
  </xs:element>

  <!-- ### Composition section ### -->

  <xs:element name="Composition" type="compositionBlock"/>

  <xs:complexType name="compositionBlock">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element ref="ModuleCall"/>
      <xs:element ref="ParallelCall"/>
      <xs:element ref="Branch"/>
    </xs:choice>
  </xs:complexType>

  <xs:element name="ModuleCall">
    <xs:complexType>
      <xs:choice minOccurs="0">
        <xs:element ref="CallFilter"/>
      </xs:choice>
      <xs:attribute name="id" type="moduleIDREF" use="required"/>
      <xs:attribute name="allowVetoResult" type="xs:boolean" use="optional" default="false"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="ParallelCall">
    <xs:complexType>
      <xs:sequence minOccurs="2" maxOccurs="unbounded">
        <xs:element ref="ModuleCall"/>
      </xs:sequence>
      <xs:attribute name="mergePolicy" type="mergePolicy" use="optional" default="ignore"/>
    </xs:complexType>
  </xs:element>

  <!-- Branch -->
  <xs:element name="Branch">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="If"/>
        <xs:element ref="Else"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="If">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="compositionBlock">
          <xs:attributeGroup ref="callFilterAttributes"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="Else" type="compositionBlock"/>

  <!-- Filters -->
  <xs:element name="CallFilter" type="filter"/>

  <xs:complexType name="filter">
    <xs:attributeGroup ref="callFilterAttributes"/>
  </xs:complexType>

  <xs:attributeGroup name="callFilterAttributes">
    <xs:attribute name="event" type="eventList"/>
  </xs:attributeGroup>

  <!-- ### Simple Type Declarations ### -->

  <!-- Loader loaderIdentification -->
  <xs:simpleType name="loaderIdentification">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>

  <!-- Core moduleID -->
  <xs:simpleType name="moduleID">
    <xs:restriction base="xs:ID"/>
  </xs:simpleType>

  <!-- Core moduleID reference -->
  <xs:simpleType name="moduleIDREF">
    <xs:restriction base="xs:IDREF"/>
  </xs:simpleType>

  <!-- Merge policies -->
  <xs:simpleType name="mergePolicy">
    <xs:restriction base="xs:string">
      <xs:enumeration value="priority"/>
      <xs:enumeration value="ignore"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Events -->
  <xs:simpleType name="eventList">
    <xs:restriction>
      <xs:simpleType>
        <xs:list itemType="events"/>
      </xs:simpleType>
      <xs:minLength value="1"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="events">
    <xs:restriction base="xs:string">
      <xs:enumeration value="packetIn"/>
      <xs:enumeration value="flowMod"/>
      <xs:enumeration value="connectionUp"/>
      <xs:enumeration value="connectionDown"/>
      <xs:enumeration value="portStatus"/>
      <xs:enumeration value="flowRemoved"/>
      <xs:enumeration value="errorIn"/>
      <xs:enumeration value="barrierIn"/>
    </xs:restriction>
  </xs:simpleType>

</xs:schema>